services:
  pg_age:
    build:
      context: .
      dockerfile: docker/backend/database/postgres/Dockerfile
      args:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB_GRAPH=${POSTGRES_DB_GRAPH}
        - POSTGRES_DB_USERS=${POSTGRES_DB_USERS}
    container_name: pg_age
    env_file:
      - .env
    networks:
      - app_network
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB_GRAPH}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    container_name: Redis
    build:
      context: .
      dockerfile: docker/backend/cache/redis/Dockerfile
      args:
        - REDIS_PASSWORD=${REDIS_PASSWORD}
        - REDIS_USER=${REDIS_USER}
        - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - backend_redis_date:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 5s

  backend:
    build:
      context: .
      dockerfile: docker/backend/api/Dockerfile
    container_name: backend
    depends_on:
      pg_age:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - POSTGRES_GRAPH_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pg_age:5432/${POSTGRES_DB_GRAPH}
      - POSTGRES_USERS_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pg_age:5432/${POSTGRES_DB_USERS}
      - REDIS_URL=redis://${REDIS_USER}:${REDIS_USER_PASSWORD}@Redis:6379
      - SECRET_KEY_JWT=${SECRET_KEY_JWT}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - REFRESH_TOKEN_EXPIRE_DAYS=${REFRESH_TOKEN_EXPIRE_DAYS}
    restart: unless-stopped
    networks:
      - app_network
    ports:
      - "8005:8005"

networks:
  app_network:
    driver: bridge

volumes:
  pg_data:
  backend_redis_date: